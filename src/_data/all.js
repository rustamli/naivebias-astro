export default {
    posts: [
        {
            id: 'the-three-types-of-work',
            title: 'The three types of work',
            description: 'All we do can be split into three categories, each has it own best practices when it comes to processes and communication',
            postedOn: 'Jan 8th, 2021',
            sharingImage: '/img/twitter/tw-the-three.png',
            content: `
            <p id="4dc30e21-ede7-49cb-90c0-7f4b2667f943" class="">During the last year we discovered a useful classification for all the engineering work at OneDome. It serves us as a powerful framework when we think about processes, communication and planning. We split everything we do into these three categories:</p><ul id="2693c099-67a9-4b0f-8f0c-d221fc7204fc" class="bulleted-list"><li>Three weeks long projects</li></ul><ul id="3461acee-cdbf-486f-b0fd-780950771957" class="bulleted-list"><li>Problems that require immediate resolution</li></ul><ul id="a37f1df1-4c5b-4b77-8358-ad05faa8c96c" class="bulleted-list"><li>Small chunks of continuous improvement work</li></ul><p id="2d784ece-47de-4d2b-bdf6-14f73d6cc781" class="">
            </p><p id="22bc4353-0844-4b8f-8d2c-0f1e641340ff" class="">These types of work have their own specifics. Below is a description of how we organize work and which tools we use to collaborate in each case.</p><h3 id="98b98452-80af-4b04-9046-7411271b3e9d" class=""><strong>Projects</strong></h3><p id="ead36eee-e1b1-423b-8e9a-8930dbec0098" class="">We do most of the product development work in three weeks long projects. Within these weeks engineers organise their work as they see fit. We don't assign tasks. Developers get a fixed amount of time to implement a project within guidelines that product and engineering teams initially agree on. </p><p id="87186ab7-4163-4312-8ea1-0b94d8478d73" class="">To prepare for each project we collaborate on a document that we call a <em>proposal</em>. The goal is to understand whether the work proposed seems achievable in three weeks and to identify risks as early as possible.</p><p id="733071ca-ca21-4da0-bfdf-ecbd6dbc2667" class="">At the beginning a draft for a proposal is created by a member of our product team. After some initial framing it is shared with the developers for an engineering review. Once the feedback from engineering is taken into account and an agreement is reached on the feasibility of the proposal - we kick it off and the implementation team starts the works. </p><p id="e6a3f745-69f3-4df4-946d-5d0760df3647" class="">All further communication is asynchronous. We intentionally don't create chat rooms per project. We communicate over comments in a Trello card that we create for each new project.</p><p id="a8b0ab13-0463-4213-96cb-fbc123014727" class="">
            </p><p id="b2760c8e-a5ce-402f-983c-59276a5eae18" class=""><em><strong>Tools we use for the projects:</strong></em></p><ul id="b288ea4b-f5e1-4a36-bf6f-3b3ad45c27f7" class="bulleted-list"><li><a href="https://www.nuclino.com/"><strong>Nuclino</strong></a> - for collaboration on the proposal document</li></ul><ul id="9ee97646-e51a-430c-a890-d58ad585ab25" class="bulleted-list"><li><a href="https://trello.com/"><strong>Trello</strong></a><strong> - </strong>we create just one card for each project, in that card we use to-do lists for tasks within the project</li></ul><ul id="02cb2b94-ac7c-4ab8-a3ca-f89b6e1f72fc" class="bulleted-list"><li><strong><a href="https://airtable.com">Airtable</a></strong> - big picture view for all projects over time</li></ul><ul id="c64378d5-4c1d-4c3c-93d5-997e77809cda" class="bulleted-list"><li><a href="https://miro.com/"><strong>Miro</strong></a><strong> </strong>- for real-time collaboration and engineering reviews if they happen over a video call</li></ul><p id="80e24713-4bba-4acb-bd97-7be7e371339b" class="">
            </p><h3 id="bd9db4b9-1db5-423b-9e09-f55f01544e4f" class=""><strong>Surges</strong></h3><p id="a64b3ae7-207a-453a-b74b-7b077ca37dd8" class="">When we are in a situation with a sense of urgency we start a surge. The reason for the pressure can be an issue that requires an immediate fix or a rare business opportunity that needs help from engineering. During a surge engineers always act in an accordance to predefined protocols and runbooks, follow strict communication rules and focus exclusively on delivering a quick solution. Engineering leadership is heavily involved in order to pull required resources and coordinate activities.</p><p id="06688ecc-4e93-4bd5-9957-bcc237f228d0" class="">Surges require completely different approach to communication. Given their urgency and high impact there are more people within company interested in real-time updates. At the same time an engineer investigating a problem requires to maintain clear focus and can be easily distracted by constant chat alerts with requests for updates.</p><p id="394a4ab8-441b-4261-b4fc-650979f8c062" class="">Email turned out to be the best communication tool for a surge. We create an email thread as the very first step and add everyone involved into it. The communication over email is asynchronous, however in this case we commit to respond as soon as we have more information. For example, if investigating an issue requires time the engineer handling the surge will clearly identify how much time he needs for the first go. The same engineer will reply not later than the time specified, either to request more time or to share the latest findings.</p><p id="60fdb9fd-7a73-45ed-80f8-130bd359fe81" class="">
            </p><p id="e5b5d216-12de-4511-acff-c5b56c5bdac3" class=""><em><strong>Tools we use for the surges:</strong></em></p><ul id="3eab1291-e050-45c6-b71e-9c8459f00392" class="bulleted-list"><li><strong>Email </strong>- our main communication medium during a surge</li></ul><ul id="014263d4-e3e6-45a7-a76c-2d3426b0f762" class="bulleted-list"><li><strong>Real-time chats and calls</strong> - for engineers only, if there's a requirement to coordinate</li></ul><ul id="d196a6f5-aac4-4d33-b1ba-2214d3c94519" class="bulleted-list"><li><a href="https://airtable.com/">Airtable</a> - storing all historical surges, with notes on resolution and retrospectives</li></ul><p id="796fda7e-e6bb-4553-bd4b-d511797ea7e2" class="">
            </p><h3 id="9fa2ad9c-c30f-4a6e-b7c3-1faa46ea1762" class=""><strong>Continuous improvement work</strong></h3><p id="36d3e84f-5625-4368-ba50-a4a111dd0faa" class="">Certain aspects of our tech stack require regular enhancement. Series of small refinements help us to achieve this. Here are some examples: improving our DevOps flows, updating documentation, improving cross browser compatibility, updating libraries, cleaning up unused service instances upgrades etc. These modest contributions produce useful results in a short span of time from few hours to couple days of work. The best moment for this mode of working is the period between projects. </p><p id="a53835c0-106b-4d5a-a330-7f37ce78c4b6" class="">Our tech strategy identifies areas of responsibilities for each engineer and sets long term goals for them. Driven by these goals engineers self-manage their work on small improvements. We use an internal tool to post status updates on their most recent efforts. The resulting log is occasionally reviewed during 1:1 sessions in order to provide feedback and to streamline the future contributions.</p><p id="076be9ed-4af7-4928-93d0-058293e969a2" class="">Recently we adopted <a href="https://en.wikipedia.org/wiki/Toyota_Kata#The_Improvement_Kata">Improvement Kata</a> as a coordination and visualisation tool. We describe iterative changes clearly defining our current and the next stages as we move towards an ideal future.</p><p id="b39283e3-94f1-4348-9e6d-0af8e18a7be9" class="">
            </p><p id="c5562cde-5e12-4c41-a467-a76d66b60d8f" class=""><strong><em>Tools we use for the continuous improvement work:</em></strong></p><ul id="66e1db24-1d5b-4113-b251-01b1249f2f1d" class="bulleted-list"><li><a href="https://www.nuclino.com/"><strong>Nuclino</strong></a> - to document and collaborate on our current efforts</li></ul><ul id="df8f4ad8-82d9-4922-a0a2-d7305edaa07f" class="bulleted-list"><li><strong>Status updates</strong> - to post about recent achievements</li></ul><ul id="88d8789a-8b33-4bb4-8288-ce5815f04240" class="bulleted-list"><li><a href="https://miro.com/"><strong>Miro</strong></a><strong> </strong>- to visualise our Improvement Katas</li></ul><p id="c9ad3439-94e6-48c4-82f6-b280568b2ce1" class="">
            </p><p id="ee79778d-267e-411d-a834-9531864c51c8" class="">
            </p><p id="2ace6fca-b19a-47a5-acec-7aeea85c33be" class="">Our categorisation provides the engineering team and the executives with a shared language. In addition to other benefits this language gives us a straightforward prioritisation mechanism: a surge is always more important than a project, and the work on a project always has higher priority than a small improvement. It also helps to understand the trade-offs that we make as we allocate our engineering resources. This is especially valuable in a dynamically changing environment. Ability to adjust sails accordingly in an unpredictable situation is what defines a truly agile organisation.</p><p id="e1586d81-2551-44ab-b168-376315740ef8" class="">
            </p>`
        },
        {
            id: 'your-very-own-third-party-service',
            title: 'Your very own third party service',
            description: 'A mental experiment that helps to decouple parts of complex products',
            postedOn: 'Jan 19th, 2021',
            sharingImage: '/img/twitter/tw-your-very.png',
            content: `<p id="21f37025-9f7f-4fa7-add0-324f4fd490da" class="">I often pretend that some parts of our platform are actually services provided by third party organisations. Doing so helps me draw borders between our products that have large overlaps. This way I also avoid irrelevant details and stay on the right level of abstraction while solving a design problem.</p><p id="7dff4663-d4f3-43ae-a316-bfee35d4eb12" class="">For example, say we are working on an educational network that offers services both to universities and students. We have two products. The first one is a marketplace of online courses. And the second one is a system for universities to process student applications. It is expected that students who complete an online course will be interested to continue their education by pursuing a degree.</p><p id="dc7d070c-05c6-4f7f-bfa7-2cfecf340b35" class="">Both products have concepts of <em>students</em>, <em>universities</em>, <em>courses</em>, <em>lecturers</em> and <em>tutors</em>. However, these terms have a different meaning in each case. A course in the online learning portal is a single product to be purchased by a student. It contains all the relevant educational material. As for the university applications a &quot;course&quot; is just a title and a description of a course that a student is going to be taught as part of the degree.</p><p id="b32e4ad1-b917-4519-b351-a3e86415b9c9" class="">
            </p><figure id="07ba2835-4e4b-4abd-a618-5e3f2c1b6a35" class="image text-center">
                <img class="m-auto" style="width:432px" src="/img/02/Untitled.png" alt="example of a unified language"/></figure><p id="01757b63-8eec-40a7-a2d4-ab2cf926179b" class="">
            </p><p id="e9cab0f3-3606-42fa-bbcc-901d91105a22" class="">You can imagine how much more complication this can cause with hundreds related products within a platform. And I don&#x27;t mean just database representation or classes diagram. Trying to cover everything within the same language affects designers, copywriters and even customer support. Think the reverse effect of the Conway&#x27;s law. The one size fits all domain view makes internal communications more complicated.</p><p id="6eb71f6f-4a57-40ea-bdc8-787b6bf0f8be" class="">Let&#x27;s now imagine if these two products were built by two different companies: the University Applications Ltd and the Online Courses Ltd. Each of these companies would have much simpler worldview:</p><p id="cd8f8eed-8650-474d-8118-abaaf5c5e7ed" class="">
            </p><figure id="13114b81-d080-4bb4-96c5-69f5a1ab2bbf" class="image text-center">
                <img class="m-auto" style="width:624px" src="/img/02/Untitled02.png" alt="example of the divided approach" /></figure><p id="a6da3a48-79f1-4b60-b149-834105014889" class="">
            </p><p id="4c80e6fe-c9f0-46c6-8415-5441615cdbff" class="">We can let each of the imaginary companies use their own language. As a result the terms scoped within a specific context will be cleaner and more straightforward.</p><p id="528ec571-6d9e-4298-8e3f-f560ec96a7ce" class="">Let&#x27;s imagine that these companies have built two completely different web applications. Some time passes and University Applications Ltd acquires the Online Courses Ltd. Now they need to talk about an integration.</p><p id="ad208f90-c909-4eaa-aced-27b51ffa419f" class="">They quickly realise that the only integration that matters is that students can use the same accounts across the two products. University representatives managing online courses and application administrators are employed by different departments and are happy to use separate products - each suited for their own needs. A simple reporting tool will easily let analysts combine all data for a given university or student across both databases. </p><p id="f3f9bff8-1cd8-4f54-ba40-dba4d1ae1bf5" class="">
            </p><p id="315f87a0-e0d2-4234-b7a5-b89933f56b5c" class="">Mental experiments like this help me ensure that distinct parts of our platform always have one and only one duty. Just as the <a href="https://en.wikipedia.org/wiki/Unix_philosophy">Unix philosophy</a> teaches us: &quot;Write programs that do one thing and do it well&quot;.</p>
            `
        },
        {
            id: 'low-risk-integrations',
            title: 'Low risk integrations',
            description: 'Ways to assess technical risks before starting an integration project and suggestions about tackling them',
            postedOn: 'Feb 12th, 2021',
            sharingImage: '/img/twitter/tw-low-risk.png',
            content: `<p id="40e80695-b66d-408b-a979-ad7190689c57" class="">At OneDome we build a platform that serves consumers and businesses from various industries. We often face projects that require an integration with a third-party service. Some of our products act as a melting pot for information that we pull from various sources. While others push collected data into a myriad of external destinations. So far we have successfully established connections with more than 600 systems both in the property industry and outside.</p><p id="c9a8fefd-78fb-406f-87f0-be5d7ba712a1" class="">There is one important lesson that we have learned so far. A proper initial research can save enormous amount of time and effort. Usually your project will require to connect to a third party service through some kind of an API. Depending on the use-case you will be either a service provider or a service user, or both. In any of these cases, consider the following questions before you start the work on the final solution:</p><p id="b62d6a64-c6ae-4968-a179-f879e7f5e32d" class="">
            </p><p id="ffc9b8a1-b80f-4920-8f13-fd17ea991a48" class=""><em><strong>Push or pull? </strong></em>Ultimately there are two mechanism to send data outside your services. You will be either providing an ability to pull data from your system, or you will push it to an external destination. The same applies to receiving data. You will either pull it from the third party service or provide an interface for them to push it to you. Start by understanding which of these mechanisms are available and what are the implications of their usage in your case.</p><p id="0f0035c8-9bc5-4fb9-a459-540387995c65" class="">
            </p><p id="bc1f7633-e2a3-43e2-b606-b7198529bbf7" class=""><em><strong>How does authentication work? </strong></em>It&#x27;s highly likely that your integration with another service will not happen through a public channel. This means services involved will need to authenticate requests they receive. There are many frameworks and standards that solve this problem. Understand which ones are going to be used in your project. Test connections if possible and ensure that you have credentials. Often you will have two separate sets of credentials for production and development environments respectively. </p><p id="a3144e9d-4130-4298-b4df-1914ee01878e" class="">
            </p><p id="52a7f882-e002-45ff-87f9-6a92a4b0beb8" class=""><em><strong>Is there a sandbox? </strong></em>In many cases services provide a sandbox (or a development) mode which can be vey handy for sending test requests and pulling test data while an integration between two services is built. If you are are acting as the main service provider in an integration think about providing an ability to easily run tests for the external developers. And if you are the service user, research if there&#x27;s an ability to safely test your solution with mock data.</p><p id="9bc62918-ff01-41ba-9ae1-859a2e469782" class="">
            </p><p id="8d3bac3a-1346-4bc6-94f6-4e443544e40f" class=""><em><strong>What are the support channels?</strong></em> In most of integration projects good communications are essential to avoid any friction and unnecessary delays. As a service provider make it clear who are responsible parties on your side. It might be a dedicated support team, a team of developers of the service involved or even one person responsible for the success of the integration project. As a service user, make sure you know who are your main contacts during development stage and further for the maintenance needs.</p><p id="3edc06d2-7e97-4e88-a203-7c9e796ef48f" class="">
            </p><p id="ec255016-ace5-4d5f-a91f-d1c24a474a6d" class=""><em><strong>Are there any quotas or limitations?</strong></em><em> </em>Many products have certain limits when it comes to usage of their services through an API. It might be directly linked to a pricing plan or a commercial agreement. It can also be there just in order to ensure that the requests do not affect the overall performance. Clarity on this will save you from unpleasant surprises during the implementation work.</p><p id="73b8a625-99f9-4bc2-85bb-0f3a5c676c75" class="">
            </p><p id="ddd69616-3cfa-4631-873f-b1a69d32f168" class=""><strong>How will monitoring and analytics work?</strong> Some live connections between two independent systems require automated health-checks or even more sophisticated monitoring mechanisms. Availability of analytics is another common requirement for the integration projects. It might be a live dashboard or an automated reporting emails. It is important to think about these two aspects while scoping a project. The stakeholders who own operations are usually the most useful resources for understanding the context around monitoring and analytics for your integration.</p><p id="02a0ddba-7f7a-4849-b4df-f4380bb235f3" class="">
            </p><p id="ffc3ba6b-04d5-4db2-8ed1-e68e7238ccb7" class=""><strong><em>What is the big picture? </em></strong>Additionally, I&#x27;d strongly recommend understanding all the services provided by the product you are integrating with, not just the part you need in your project. It&#x27;s often the case that a related service will help you understand the inherent logic of the entire API by providing some missing context.</p><p id="3cc51eb3-486b-4a01-b960-fbf06a37e55a" class="">
            </p><p id="1cf47137-a2d5-475e-bb6d-a079190a9430" class="">The questions from this article will surface surface potential risks for you. This will pay you off by making your implementation stage much more predictable. Once you start the building phase you will be able to focus on the composition and design decisions, instead of handling the unforeseen and inventing ad-hoc solutions.</p><p id="f762b733-352b-4531-87a8-4fac8c79aa65" class="">
            </p>`
        },
        {
            id: 'running-a-remote-team',
            title: 'Running a remote team',
            description: 'Best practices for communication and organising work for remote teams',
            postedOn: 'Feb 25th, 2021',
            sharingImage: '/img/twitter/tw-remote-work.png',
            content: `<p id="680e0650-69f9-4b03-a3b6-bf4b641ff73b" class="">It&#x27;s been one year since we have switched to a fully remote mode of working at OneDome. Like for many other companies around the world this transformation was completely unforeseen for us. We have quickly learned that the worst way of working remotely is simulating the office environment by using chat and video calls all the time. Instead of focusing on the limitations introduced by the distance, we have discovered many opportunities to improve our collaboration and to manage our time in a much better way. In this post, I will share some of the most important insights we had during this year.</p><h3 id="dc7e3863-33ee-4a44-82c2-cef5d672f883" class="">Invest into knowledge management</h3><p id="5c068f3e-4839-4090-9398-e0196bff6297" class="">Context sharing is one of the most important leadership skills. Knowledge bases such as internal wikis or handbooks can be invaluable tools in order to keep everyone in your team in sync. Investing time in order to setup one will pay off very quickly by saving time spent on onboarding each new employee and on responding to common queries, it will also help you reveal the hidden tribal knowledge of how certain things work and put it into writing.</p><p id="2e181fc7-6aaa-4985-892e-36ec4c210579" class="">There are lots of great tools these days. You should pick one based on the approach that works best for you. At OneDome we use <a href="https://www.nuclino.com/">Nuclino</a>, you can also look into tools like <a href="https://www.notion.so/">Notion</a>, <a href="https://roamresearch.com/">Roam Research</a> or just start with a git hosted Markdown-based wiki.</p><p id="a0a6fbf6-ecff-4a8a-8c9a-e4bacc5a9ff2" class="">One important thing to consider is that you should involve everyone in your team into the process of building and maintaining the knowledge base. This way you will benefit from fresh and evergreen representation of information across company. </p><h3 id="f3dff997-fb4a-44b5-9b39-ca2a1f772de1" class="">Learn to communicate asynchronously</h3><p id="f09b9bf1-f682-4cd8-bc8a-d3f9f83517aa" class="">Successful remote teams always prioritise asynchronous communication. It&#x27;s type of communication where immediate response is not expected. Does this sound like an email? Well, yes and no. Email is just a medium for sending and receiving messages. What is more important is how your team members are using this medium. </p><p id="5c619928-d4c8-41a6-b009-76a99aa06cf9" class="">Expectations management and clear writing are the main skills to cultivate among your employees to achieve thoughtful and organised exchange of information. If you are looking for a way to start, look around for successful use cases that might already exist in your company. For example, most engineers in your company are probably already using asynchronous tools such as Pull Requests for code reviews in their daily work. Support or helpdesk tickets are another good example.</p><p id="a18f5475-6209-41bb-b3ba-f9b564a69348" class="">Prioritising asynchronous means avoiding real-time conversations through chat or video calls as much as possible. It is not intuitive at the beginning, but reducing amount of time spent on live interaction creates room for deep focus and meaningful work. This is especially true for the makers in your company - developers, designers, copywriters etc. This distinction is covered well in the famous <a href="http://paulgraham.com/makersschedule.html">article</a> by Paul Graham.</p><h3 id="94a04578-f16c-4418-8e12-d5d93771b6ce" class="">Share the company goals and the progress clearly</h3><p id="1553e219-ff82-48ad-9778-44fca2a21b27" class="">In a world without a physical office it is crucial to keep everyone aligned on current goals. Make sure you share simple and clear goals with everyone. Regularly update your team on the progress that the company made against these goals. Other than providing a direction, this is also an important motivation booster. Seeing the big picture helps everyone understand their roles and contributions much better, which blooms a self-driven work culture in your company.</p><p id="1b5f0969-2afb-4684-b195-969041ef7203" class="">You can use different techniques for defining goals and tracking them. <a href="https://en.wikipedia.org/wiki/OKR">Objectives and key results (OKR)</a> is a popular approach for this. As for tools - it can vary from a spreadsheet or a <a href="https://trello.com/">Trello</a> board to a set of specialised services. In general, try to keep it as simple as possible and only add details to it if it is absolutely necessary.</p><p id="2d749585-5746-4a70-a70f-6cf189165e3f" class="">It is also important to have recurring company update sessions to share highlights, acknowledge failures and celebrate wins. A monthly or bi-weekly &quot;All Hands&quot; event is a good way to do this.</p><h3 id="f49760c9-60f1-4af8-bce0-0d39afd60a32" class="">Know your team and prevent social isolation</h3><p id="52bb61a8-7af5-4d5d-a3ae-d834b0ed4dee" class="">Managing teams remotely is a challenge that requires a major advancement in leadership skills across the company. Having sense of current mood of your employees requires a much more structured approach rather than a casual 1:1 over a coffee. These days there are many great tools and methodologies that might help you to build an environment of trust, honesty and growth for your remote team. Check out solutions like <a href="https://officevibe.com/">Officevibe</a> or <a href="https://knowyourteam.com/">KnowYourTeam</a>, there are also plenty free resources online. Make sure you have a company-wide HR strategy and a systematic approach for implementing it.</p><p id="b819032a-58f2-49e0-9753-2664f4aece2f" class="">Another important challenge is to maintain and develop a sense of community within your company while working from various locations. This can be achieved by regular meet-ups based on interests, random sync-ups and platforms for off-work discussions. All these activities should be done voluntarily and the best way to organise it is to distribute responsibilities for them among different people in your team.</p><h3 id="7467d160-2eb7-4314-b8b9-535fef9174a9" class="">Track all the work</h3><p id="63bcc79a-1112-4a48-a008-68a55e710780" class="">Tracking all work is very important in an environment without live collaboration. Tracking doesn&#x27;t mean time tracking, but rather registering every chunk of work that is agreed to be done. Verbal-only agreements can cause lots of problems when working remotely. Even if it is a small favour that will take a day of work, having that data point will help to plan and organise resources more efficiently in future.</p><p id="7ef1b6ca-ddb5-473a-9568-89cf81270edd" class="">For Engineering at OneDome we use a simple framework where we split all work we do into three categories: projects, surges and small improvements. You can read about our approach in details in this post: <a href="/posts/the-three-types-of-work">Three types of work</a>. </p><h3 id="6cf2626f-a8d8-40c9-ad31-4cae6198ba1b" class="">Learn from others</h3><p id="33082385-beaa-4533-8201-162a3642d91b" class="">There are great companies out there that are run by remote teams for many years. It&#x27;s definitely worth learning from their experience. Some of these companies have shared many valuable resources on the way they organise work and and some even made their employee handbooks available for everyone. Below are some links to start with:
            </p><ul id="94bc562f-11f8-45cd-97b5-0e2dbd02bbed" class="bulleted-list"><li>Basecamp -  <a href="https://basecamp.com/handbook">handbook</a>, <a href="https://basecamp.com/guides/how-we-communicate">guide to internal communications</a>, <a href="https://basecamp.com/books/remote">book on remote work</a></li></ul><ul id="4ec4119a-5093-48d1-a20a-5630364fb800" class="bulleted-list"><li>GitLab -  <a href="https://about.gitlab.com/handbook/">handbook</a>, <a href="https://about.gitlab.com/resources/ebook-remote-playbook/">remote work playbook</a></li></ul><ul id="c1cebed6-bd4b-4189-9672-6297d23ef7f8" class="bulleted-list"><li>Doist - <a href="https://blog.doist.com/how-doist-works-remote/">about remote work at the company</a>, <a href="https://blog.doist.com/async-first/">async-first</a></li></ul><ul id="bf8ecb85-7745-4002-8f94-d656f07eeb7f" class="bulleted-list"><li>Zapier - <a href="https://zapier.com/learn/remote-work/">guide to remote work</a></li></ul><p id="0d8a3ca4-599d-4a6b-b47f-943e71cd4f41" class="">
            </p><p id="1c7b54a8-8549-4cb1-a5e6-a00d368e0728" class="">We are still early in our journey of building a successful remote first company, but the progress we have made so far is truly rewarding. Working remotely made us organise our work in a more mindful and sustainable way. It made us learn to collaborate in a more thoughtful way. As result we now enjoy our work more than ever.</p><p id="20f90516-09ee-4594-ab58-d1ed36b7e099" class="">
            </p>`
        },
        {
            id: 'research-shaping-making',
            title: 'Research, Shaping, Making',
            description: 'A lifecycle of a generic project and how different areas of expertise become relevant on each phase',
            postedOn: 'May 25th, 2021',
            sharingImage: '/img/twitter/tw-r-sh-m.png',
            content: `<p id="8c30229d-6d36-4cb8-92ec-03052853a92f" class="">This is a post about a lifecycle of a generic project and how different areas of expertise become relevant on each phase. The model below will help you allocate roles within your team in the best way considering everyone&#x27;s strengths. </p><p id="fdb645cd-fbae-49c9-9925-db86b32bf7a6" class="">If we generalise, the point of any project is delivering some kind of a change. From this perspective we will split a project into three phases: Research, Shaping and Making.</p><figure id="d4f7fb19-73c6-434c-aebe-b1551332c706" class="image"><img style="width:3276px" src="/img/05/The_Why_What_and_How_teams_-_Frame_1_(2).jpg"/></figure><h2 id="e44bb8e5-7d36-4ee1-b7bf-20da207b032e" class="">Three phases</h2><ul id="97dc8c02-31b7-4701-9b66-3cf391d344e7" class="bulleted-list"><li><strong>Phase 1</strong> - 🔍 Research. The main goal here is discovering, surfacing and understanding problems in the current state of the things. Outcome of this phase is the reason for the change.</li></ul><ul id="51ffc514-2a22-481c-97e1-d58caa53e7c6" class="bulleted-list"><li><strong>Phase 2</strong> - 📐 Shaping. This is when a solution is designed. The result of this phase is a definition of the change.</li></ul><ul id="02b4d123-50b5-4bf7-a217-3112299674e2" class="bulleted-list"><li><strong>Phase 3 </strong>- ⚒ Making. Finally, during this phase the team delivers an implementation of the change.</li></ul><p id="43985d3f-9cf7-4d42-8715-817939578608" class="">
            In other words, in JTBD terminology we start with thinking about Demand side and as solution emerges we move towards working on the Supply side. In reality this transition is not strict and our phases intersect.
            </p><figure id="16fcbef3-f057-41fd-a756-ef9891c211df" class="image"><img style="width:2530px" src="/img/05/The_Why_What_and_How_teams_-_Frame_3_(1).jpg"/></figure><p id="3ab68ed2-73df-4193-96d0-77188ba19097" class="">
            </p><h2 id="fc768312-3ad0-408c-bb58-8ba693126009" class="">Role types</h2><p id="d3bfe288-d885-4dc1-b1a1-0cca9ed5bf8f" class="">Now, let&#x27;s look into different types of roles that we end up in this model for team members with expertise in one or more phases:</p><figure id="463e9821-8724-4039-953f-ff1250aa4af4" class="image"><img style="width:2404px" src="/img/05/The_Why_What_and_How_teams_-_Frame_6.jpg"/></figure><ul id="b2a1b584-203f-4322-81df-7447bf223e3e" class="bulleted-list"><li><strong>Researchers</strong>: constantly improve their domain understanding, search for opportunities to deliver value and interview external parties to explore new challenges</li></ul><ul id="f897c42f-20f4-466f-bea9-a684e013eb01" class="bulleted-list"><li><strong>Researcher-Shapers</strong>: great understanding of the domain and also ability to prioritise problems and come up with solutions for them</li></ul><ul id="0cbf8335-91f8-45e7-85f2-ccbab734f781" class="bulleted-list"><li><strong>Shaper-Makers</strong>: come up with the most optimal solutions given a problem and a context, ability to make calculated trade-offs and de-risk the upcoming implementation work </li></ul><ul id="a7fa73f2-7df8-4618-a5d0-16120ff7f619" class="bulleted-list"><li><strong>Makers</strong>: come up with ways to implement the solution given available resources, knowledge of the technologies and methodologies used in their field </li></ul><ul id="9a2081ed-d53b-4db4-877b-cfc17495611d" class="bulleted-list"><li><strong>Researcher-Shaper-Makers</strong>: combining all three areas of expertise, they usually exist only in a small and early-stage team </li></ul><ul id="1ac404c5-1000-4468-9596-cec254e0c8b8" class="bulleted-list"><li><strong>Researcher-Makers</strong>: this is a rare intersection, can be the case if the Making team is consuming the result of their work (for example a team of engineers working on tools for development)  </li></ul><p id="918b2494-44a2-4bae-ba5c-9d83168d99c9" class="">
            </p><p id="8e9ee7c1-f6a5-451c-8e40-319b525e5d66" class="">Team members can play various roles given their expertise. It is important to have dedicated owners for the transitions from one phase to another. The best owners tend to be the roles in the corresponding intersections: Researcher-Shapers and Shaper-Makers.</p><p id="c348c918-6ea0-40d4-bed1-affdd3702c02" class="">
            </p><h2 id="2ee1de8a-523a-43b3-9f4b-e739295cd918" class="">Working in cycles</h2><p id="e37abf09-4183-4419-8a51-bfea8201a832" class="">Given a certain split of roles in most cases it is possible to organise work in fixed length cycles, so that for each team work is shifted according to the phase they are focused on:</p><figure id="7683a6e3-0098-4b59-a726-5227eceda6a4" class="image"><img style="width:2700px" src="/img/05/The_Why_What_and_How_teams_-_Frame_7.jpg"/></figure><p id="4bdc0f0d-a2b4-4a79-b5da-682774f229c6" class="">And finally - handover between phases is vital for the success of the project overall. It should be done through an established process for Project Briefs (Research to Shaping) and Implementation Reviews (Shaping to Making).</p><p id="cb70f32d-e181-46b2-8df4-619d187a1e3c" class="">
            </p><p id="4786271a-ba8a-43b4-96a0-f953f0e2b37e" class="">
            </p>`
        },
        {
            id: 'the-systems-lens',
            title: 'The Systems Lens',
            description: 'Takeaways from Thinking in Systems by Donella Meadows',
            postedOn: 'Jun 19th, 2021',
            sharingImage: '/img/twitter/tw-sys-lens.png',
            content: `<p id="c5cb46e6-9bda-40f6-ad17-a01a7ba70ee9" class="">I have recently finished reading <a target="_blank" href="https://www.amazon.co.uk/Thinking-Systems-Primer-Donella-Meadows/dp/1603580557">Thinking in Systems</a> by Donella Meadows. It&#x27;s a classic book that has influenced the worldview of most of its readers. And I am not an exception. I got equipped with a powerful systems lens. A lot of ideas that were previously intuitive for me have finally found their solid explanations. </p><p id="8fc67837-4796-46c6-b352-dcc89ef970a1" class="">In this post, I want to share two insights from the book. These insights are only a small part of a long list of my takeaways. But these two have affected me the most.
            </p><h3 id="51726783-bfa2-41cc-8f38-2b6c76ce05f6" class=""><strong>1. Impact of changing parts of a system</strong></h3><p id="7fe214ee-93ed-4f97-9acc-704e6eee0f65" class=""><em>Systems consist of elements, interconnections and purpose (or function). Changing each of these aspects of a system has a different impact. Changing elements has the lowest impact. Changing interconnections has moderate impact. And changing purpose has the highest impact.</em></p><p id="1578bee5-4f7c-4f60-9bff-e159e64a6474" class="">Imagine a small technology company. Its elements would be its employees - engineers, designers, product managers, executives. Interconnections are the processes and the communication flows between various teams. The purpose of this system is to deliver a valuable product to the market to generate profit.</p><p id="04d9ea0a-e8d7-49fb-8aa3-931e83d680b0" class="">Now let&#x27;s see what is the impact of changing each aspect of this company. Say we change employees on specific positions by hiring more experienced professionals. There is reasonable expectation that the company will perform better. But if the only change is the change of employees - existing inefficiencies in the company will not go away. The company will operate in the same way.</p><p id="ec0fc8e0-33c8-41f9-a04f-5ac57c6aeaec" class="">If we change interconnections - the rules and processes in the company - we can improve on a much greater scale. The same engineering team trained to work with the best agile practices can significantly outperform themselves.</p><p id="c74f00f1-138d-44c6-b960-e3f9a911a616" class="">And finally we see the largest impact when we change the purpose. Say the company decides to sacrifice its profitability for a period of time. It uses this time to produce a new technology. That technology can later help it achieve profit incomparable to the one it started with.</p><figure id="191e6837-50b4-4ece-8c24-84673ebc6ea3" class="image"><img style="width:2705px" src="/img/the-systems-lens/Untitled_-_Frame_2.jpg"/></figure><p id="13eb2f94-6e86-4970-be3e-f4362521ea09" class="">All my examples were examples of a positive change. But, the same is true for the negative impact. In the book, there is a great chapter which goes into details of various leverage points in systems. The chapter compares 12 different places to intervene and it is full of illustrative examples for each case.</p><h3 id="b4550b55-fa50-4af6-9935-9bec7586938a" class=""><strong>2. Events, behaviour, structure and mental models</strong></h3><p id="09684944-7123-415a-b472-bf2371cb919d" class=""><em>&quot;System structure is the source of system behavior. System behavior reveals itself as a series of events over time&quot; - </em><a href="https://www.amazon.co.uk/Thinking-Systems-Primer-Donella-Meadows/dp/1603580557"><em>Thinking In Systems</em></a></p><p id="e4ac1d80-686b-49ab-aefc-5f59ede7865c" class="">This insight is at the core of a famous systems thinking model known as <a href="https://donellameadows.org/wp-content/userfiles/iceberg-model.pdf">the Iceberg model</a>.</p><p id="0674efa2-1f21-4daf-a4a0-f751f207f53b" class=""><strong>Events</strong> are the visible part of the iceberg. They are usually the most accessible signals for us. And unfortunately quite often this is the only level on which we think about problems. In this section I will use a DevOps example to illustrate how using the iceberg model can help us. </p><p id="85ed4d96-4f58-4b05-a662-a52c5826b087" class="">Say we received an alert that our website is down. A quick look into the alert details reveals the reason. The website is down, because the database has run out of memory. We link these events and a quick solution emerges - we need to reset the database. But it doesn&#x27;t guarantee that this problem will not repeat in future.</p><p id="490d97dd-ec6c-4e6e-b8f0-8204f9d77c17" class="">Let&#x27;s go to the next level of the iceberg. The first underwater level is knowns as <strong>Patterns of Behavior</strong>. This is where we start noticing trends and recognise patterns in what we observe.</p><p id="4f20984f-11bd-4d3c-9d6f-735b8845606d" class="">In our example, we review our alerts for the last 3 months and notice that most of the alerts caused by the database memory issue occur on Fridays around 5am. With this knowledge we can automate database reset around that time each Friday. This will prevent the problem and will spare us from urgent alerts. </p><p id="fe6f357f-ab6c-4c12-b9e9-1e0d2f9e3bc4" class="">This sounds like a solution, but without understanding the cause - it is will not be a reliable one. Whatever causes the problem each Friday can be rescheduled to Tuesdays - and our preventative Friday database reset will become useless.</p><figure id="d7ab72f8-74d0-4ec3-b0cc-6bfa21bf245d" class="image"><img style="width:2291px" src="/img/the-systems-lens/Untitled_-_Frame_1.jpg"/></figure><p id="c6c9e398-db0d-4729-a5b6-4e629726c49d" class="">
            </p><p id="e5cc712e-9aa4-418d-b0a4-1eae48780d98" class="">A much better solution emerges when we go to the next level of the iceberg, which is <strong>System Structure</strong>. Understanding the structure means understanding the elements of your system and interconnections between them.</p><p id="d3865ce9-c97f-43af-9f5f-9abda7f6a4a2" class="">In our case, knowing the structure of our platform we can look into what happens each Friday at 5am. We find out that there is a data import script that runs at this time. This script writes all its logs into the database. And this causes the database to run out of memory. We can solve this by writing logs into a logging service instead. With this solution we can be confident data import script will not overload the database again.</p><p id="33d6d886-40d8-4756-8d44-d8940e79ff5d" class="">One the last level of the iceberg we have <strong>Mental Models</strong>. These are beliefs, assumptions, values that shape the system.</p><p id="221ffa39-a878-48d8-8aab-e16157769f30" class="">Going back to our example - we plan and organise a retrospective to discuss the problem that we have detected and solved. During that meeting we explain the benefits of using a logging service instead of a database for writing logs to our team. By sharing this knowledge we shape a belief that will prevent similar issues across our platform in future.</p><p id="a975faf4-193e-42f2-af0b-0f93154828ba" class="">As you can see thinking and acting on deeper levels of the iceberg helps you achieve more impactful changes. It is worth developing a holistic understanding of the system to make fundamental improvements.
            </p><p id="09f551ad-eee4-4837-bf0f-fa060e8afbfc" class="">We can sum up both insights and visualise as one graph where from top to bottom changes have less impact:</p><figure id="c73629c1-eb87-4a8a-ac7c-ecd919349cbf" class="image"><img style="width:2420px" src="/img/the-systems-lens/The_Systems_Lens_-_Frame_3.jpg"/></figure>
            <p id="06c43301-3dfe-420d-b2de-867ef40d8f67" class=""></p><p id="2669a8f6-4efc-4825-8a1d-128869b06fb7" class="">
            </p><p id="1db83b4f-000a-4bae-ad87-be90375babb7" class="">Complex systems are all around us - in nature, politics, economics, languages, organisations. We ourselves are complex systems. I hope these two takeaways will inspire you to read the entire book, which has so much more to learn from.</p><p id="4f007866-9d9a-4728-b17e-0086e89971a7" class="">
            </p>`            
        },
        {
            id: 'growth-by-doing',
            title: 'Growth by doing',
            description: 'How we grow professionally as individuals and teams',
            postedOn: 'Jul 28th, 2021',
            sharingImage: '/img/twitter/tw-growth-by-doing.png',
            content: `<p id="c998e3fe-9d37-458c-bcd3-a14990c05819" class="">Looking back and trying to understand how I have learned some of the most essential skills I have today, I realised how much I have learned by doing rather than by studying. I have learned to code by programming games. Web development by building a school website. Computer Science fundamentals by solving&nbsp;<a href="https://en.wikipedia.org/wiki/Competitive_programming">programming challenges</a>. Software Architecture by designing solutions for complex problems.</p><p id="99d4d474-9655-4f49-b18e-e6f760d89692" class="">And on the contrary, while I have a degree in Artificial Intelligence - the only topics I feel comfortable about are the ones backed by large course projects or the final thesis. To get most of the AI theory out of me, you'd need to practice hypnosis.</p><p id="d4161c4a-b76c-4e4c-b78a-8ff0288e3ccd" class="">The same is true when it comes to the team work. Other than personal development of its individual members, teams themselves grow by doing. Each successfully completed project bounds people stronger, streamlines communication, improves operations and gives the sense of accomplishment.</p><p id="79daabd0-cbdc-4e7f-8c43-d7defea390d1" class="">
            </p><p id="d238851a-8467-4827-8887-433314678cd9" class=""><strong>Read the full version of this article at </strong><strong><a href="https://dev.to/nehfy/growth-by-doing-147">https://dev.to/nehfy/growth-by-doing-147</a></strong></p><p id="697b02c4-cf2b-49ab-8736-3d6a0cc17be9" class="">
            </p>`
        },
        {
            id: 'the-power-of-simple-rules',
            title: 'The power of simple rules',
            description: 'How we can use simple rules when dealing with complexity',
            postedOn: 'Aug 15th, 2021',
            sharingImage: '/img/twitter/tw-simple-rules.png',
            content: `<p id="b3eb0084-e918-4a3f-848a-717a7792e621" class="">It was always interesting for me how some of the world&#x27;s most complex board games have a relatively simple set of rules. The rules of games like chess, checkers and go can be printed on one page of paper and yet these games have enormous strategic depth. We play them for many centuries and still find them infinitely enthralling.</p><p id="2a783329-a59a-4aba-93bd-92b5e1ec3544" class="">Out of small number of simple rules complexity emerges. This is somehow due to the very nature of our universe. Our world is built from simple rules and patterns. If we look around we can see them everywhere. One of the most illustrative examples of this is swarm intelligence of insects such as ants and bees. The complex behavior and incredible precision of their colonies are rooted in a set of relatively simple rules. Ants for example, exchange chemical signals with each other to point out whether nearby ants need to do less or more of their current activity. This leads to the whole colony to be in sync and regulate the work of each ant without a central control system.</p><p id="f65ce445-86fa-4097-bbdc-29ed7ac911a8" class="">There are many more examples of simple rules at the core of complex systems in nature. The foundations of this behavior are studied in mathematics. From the theory of cellular automata to the study of fractals we can see how incredibly sophisticated and unpredictable are the worlds generated by basic rules. Interestingly, we can find many examples of these abstract mathematical concepts in the nature itself:</p><img src="/img/simple-rules/x.png" alt="cellular automata and fractals in nature"><h3 id="5c38a067-1dfd-47d1-aebe-ce5d5fdfe087" class=""><strong>Simple rules and self-organisation</strong></h3><p id="f439a3ca-40a9-42d1-b3cf-61937abfdc3c" class="">As we have seen in the case of ant colonies, simple rules can lead to self-organisation in systems with large number of elements. However, it is not always the case, certain simple rules result in unpredictable and chaotic output. Take the famous <a href="https://en.wikipedia.org/wiki/Collatz_conjecture">3N+1 problem</a> as example, this theory can be explained to a primary school students, however the best scientists are failing to find a pattern that would let them prove or disprove it. To achieve synchronisation and self-organisation we cannot use arbitrary set of rules. Rules must be designed in order to reach our desired goals.</p><p id="658876d5-0abb-4a73-8cd4-fbf0fdcfc493" class="">Unlike abstract mathematical settings it is not always easy to simulate the behavior our rules will result in. Especially, when it comes to other people to implement them. Below are some common ideas that can guide us towards better rules and stimulate self-organisation in our day to day work.</p><h3 id="a4173bd7-dfb7-4d2c-b6ac-1d86e52f16ef" class="">Governance over control and command</h3><p id="629801b3-66f2-4a7f-95b0-14c7b4d7ec6d" class="">Good set of rules are the ones that deliver governance rather than aim to control individuals. They set clear borders within which work can be done autonomously. As opposed to the control and command approach, where every step is tightly specified. </p><p id="7450b16f-9491-456f-afc9-073ae952cfa1" class="">For example, take a policy for requesting day-offs in a company. A control and command way of doing it will be having a precise step-by-step instruction that must be followed by an employee taking some time off. It might include rules around how many days in advance the request should be made as well as rules about who should be receiving and approving the request. As we know, this kind of rules rather create a negative outcome and unpleasant friction in a company. This is mostly because the reasons and the length of breaks that employees need vary a lot and one simple set of instructions cannot be good for all scenarios.</p><p id="5344a3dc-2fe9-4c3a-a958-cbb0bc45df9b" class="">A governance approach to the same policy could be a declarative agreement in a company that everyone aims to organise their holidays in a way that it creates minimum disruption for others. Now, it&#x27;s the responsibility of each employee to think about best way to inform their colleagues about their plans. At the same time the policy has set a border by defining that holidays should create minimum disruption for others. This way we have a self-organised approach with a shared goal to avoid operational interruptions.</p><h3 id="cf87e69b-668e-49d7-800b-3a79c152b503" class="">Principles over processes</h3><p id="f51eb8d3-1489-4ade-9175-8e3c182a7926" class="">Principles are more important than the actual processes. They define core ideas around which processes should be built. The key to consistency is to rarely change principles while constantly improving and modifying the processes with a goal to implement those principles in a better way.</p><p id="91300932-c8a7-452f-a6e0-01b6226ad1ab" class="">Let&#x27;s take software development lifecycle as an example. A rarely changing process would most certainly cause a major slowdown in an actively changing environment, such as a startup. A well tested two weeks long sprints and ceremonies around them may work great for a team in a pre-release stage. Then suddenly after launch, they may find themselves in a different environment with a large amount of incoming change requests that cannot really wait for weeks of planning and coding. They decide to adopt a kanban approach as they see it as a better process for this time given the new mode of working.</p><p id="cad02bc3-7c76-4e49-a0a0-42ae5f8fde99" class="">While the process has changed for the team, the core principle of agile development &quot;responding to change over following a plan&quot; is still maintained and their work style is consistently agile. However, if at some point they decide to stop everything and plan every detail of their work for the next six months and then follow that plan no matter what, this will be a significant change in their principles and will lead to a major change in the organisation overall.</p><p id="ded050e9-35ca-4dbe-bcd3-5316aa0764ab" class="">Keeping principle fixed and processes flexible helps teams to self-organise and constantly shape the process towards the most efficient way of working.</p><h3 id="d6ecbe66-2712-4738-afc5-e644c069f39f" class="">Less rules more probability that they will work</h3><p id="0b8a322c-1112-4e03-9ddf-ab044f01f2bb" class="">As with the board games, less rules will usually make it much easier to remember and implement them. Keeping the list short will also make it easier to distribute the rules. </p><p id="7a2d1249-9ece-4eca-b958-88e0f7b6efbf" class="">We can have a long list of qualities we want to see in our new hires. However, during an interview it will be impossible to consider all of them and keep them all in mind evaluating the answers from candidates. A better way would be to have just three or four key qualities and values shared across the company that are easy to spot during interviews. This will serve a much better signalling system to the interviewers than a long list of questions.</p><h3 id="0f5494d5-dbfb-4fda-9ff9-14115482ebd4" class="">Making rules simple</h3><p id="d2fd434f-4777-46c0-acce-55e72bc3e4e0" class="">Simple rules are the rules that are easy to understand. There should not be many different ways of interpreting them. They have to be communicated using the concepts that are shared and understood in the same way within the organisation. </p><p id="7e1b47e9-e0c1-4d0e-95ce-428d7cf7c688" class="">The rules usually have two parts: the condition and the action. When the &quot;condition&quot; is true, do the &quot;action&quot;. To make rules simple, we need to ensure both parts are clearly defined. The most straightforward conditions are <em>always</em> and <em>never</em>. If your rule can use these, go for them. However, we might need to define a more specific condition. In that case we need to make sure it is easy to recognise whether the condition is met or not. Same applies to the actions, they should be easy to apprehend and perform.</p><p id="cd3ae608-aa0f-4fe6-b65c-eec45176f6cb" class="">
</p><p id="78c71c53-6525-47c2-9a20-eed4f5005fbd" class="">As we can see simple rules do not only create complexity, but they can also be used in order to manage and govern it. Many complex problems can be solved by using a few well-chosen principles. Finding these silver bullets is, however, something that requires a lot of creativity.</p><p id="5cae983c-8789-45f1-917a-7ec52d88a853" class="">
</p><p id="e91af396-934d-4b61-8855-69052b4bab7f" class="">
</p><p id="30a4438b-be07-467d-b520-1b6b56ce7ebe" class="">w
</p>`
        }
    ].reverse()
}
